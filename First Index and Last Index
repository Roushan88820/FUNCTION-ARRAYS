                                                                             QUESTION
                                                                             
     1. You are given a number n, representing the size of array a.
     2. You are given n numbers, representing elements of array a.

      Asssumption - Array is sorted. Array may have duplicate values.

             Input Format
             
A number n
n1
n2
.. n number of elements
A number d

             Output Format
             
A number representing first index
A number representing last index


             Constraints
1 <= n <= 1000
1 <= n1, n2, .. n elements <= 100
1 <= d <= 100

             Sample Input
15
1
5
10
15
22
33
33
33
33
33
40
42
55
66
77
33
             Sample Output
5
9

*******************************************************************************************************************************************************************************
                                                                               SOLUTION
                                                                               
import java.util.*;
import java.io.*;
public class Main{
    public static void main(String []args){
        Scanner scn = new Scanner(System.in);
        int n = scn.nextInt();
        int arr[] = new int [n];
        
        for(int i = 0;i<arr.length; i++ ) {
            
            arr[i] = scn.nextInt();
            
        }
        
        int data = scn.nextInt();
        
        
        int high = arr.length - 1;
        int low = 0;
        int first_idx = -1 ;
        
       while(low<=high) {
           int mid = (low+high)/2;
           
           if(data>arr[mid]){
               
               low = mid + 1;
               
           }
           else if(data<arr[mid]){
               
               high = mid - 1;
               
           }
           else if(data==arr[mid]){
               first_idx  = mid;
               high = mid - 1;
               
           }
           
       }
           System.out.println(first_idx);
           
           int right = arr.length - 1;
           int left = 0;
           int last_idx = -1 ;
           while(left<=right) {
           int mid = (left+right)/2;
           
           if(data>arr[mid]){
               
               left = mid + 1;
               
           }
           else if(data<arr[mid]){
               
               right = mid - 1;
               
           }
           else if(data==arr[mid]){
               last_idx  = mid;
               left = mid + 1;
               
           }
           
       }
           System.out.println(last_idx);
       
       }
}                                                                               
                                                                    
